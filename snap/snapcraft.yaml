name: traefik
adopt-info: traefik
summary: The Cloud Native Application Proxy
description: |
  Traefik (pronounced traffic) is a modern HTTP reverse proxy
  and load balancer that makes deploying microservices easy.
  Traefik integrates with your existing infrastructure components
  (Docker, Swarm mode, Kubernetes, Marathon, Consul, Etcd, Rancher, Amazon ECS, ...)
  and configures itself automatically and dynamically.
  Pointing Traefik at your orchestrator should be the only configuration step you need.
  As described in https://doc.traefik.io/traefik/getting-started/configuration-overview/#configuration-file
  Traefik will search for static configuration file named traefik.yml or traefik.toml but $XDG_CONFIG_HOME
  is replaced by $SNAP_COMMON (/var/snap/traefik/common).
  To read configuration from /etc/traefik the config plug must be connected.
  To use the docker provider this snap uses two plugs: docker for the docker snap, and docker-sys
  if docker is installed other way than snap.

confinement: strict
base: core24

platforms:
  amd64:
  arm64:
  armhf:
  ppc64el:
  s390x:

plugs:
  etc-traefik:
    interface: system-files
    read:
      - /etc/traefik
  #docker-sys:
  #  interface: system-files
  #  write:
  #    - /run/docker.sock
  #    - /var/run/docker.sock

environment:
  XDG_CONFIG_HOME: $SNAP_COMMON

apps:
  traefik:
    command: bin/traefik
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind
      - etc-traefik
      - docker
      #- docker-sys

parts:
  traefik:
    plugin: go
    source: https://github.com/traefik/traefik.git
    source-type: git
    source-tag: "v3.4.3"
    build-snaps:
      - go/1.23/stable
      - node/20/stable
    build-environment:
      - GO111MODULE: 'on'
    override-pull: |
      craftctl default
      VERSION=`git tag --points-at HEAD`
      if [ -z $VERSION ]; then
        craftctl set version="dev-$(git rev-parse --short HEAD)"
        craftctl set grade='devel'
      else
        craftctl set version=${VERSION:1}
        craftctl set grade='stable'
      fi
    override-build: |
      make clean-webui
      cd $CRAFT_PART_BUILD/webui
      yarn install
      yarn build
      cd $CRAFT_PART_BUILD
      GRADE=`craftctl get grade`
      if [ $GRADE = 'stable' ]; then
        export VERSION=`craftctl get version`
      fi
      make FLAGS="-p $CRAFT_PARALLEL_BUILD_COUNT"
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp $CRAFT_PART_BUILD/dist/*/*/traefik $CRAFT_PART_INSTALL/bin/
    prime:
      - bin/traefik
